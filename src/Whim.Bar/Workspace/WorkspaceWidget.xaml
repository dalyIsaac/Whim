<UserControl
	x:Class="Whim.Bar.WorkspaceWidget"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="using:Whim.Bar"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	d:DataContext="{d:DesignInstance Type=local:WorkspaceWidgetViewModel}"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">
	<ItemsControl ItemsSource="{x:Bind ViewModel.Workspaces}">
		<ItemsControl.ItemsPanel>
			<ItemsPanelTemplate>
				<StackPanel Orientation="Horizontal" />
			</ItemsPanelTemplate>
		</ItemsControl.ItemsPanel>

		<ItemsControl.ItemTemplate>
			<DataTemplate x:DataType="local:WorkspaceModel">
				<Button
					Command="{x:Bind SwitchWorkspaceCommand}"
					CommandParameter="{x:Bind}"
					Content="{x:Bind Name}"
					Style="{StaticResource bar:workspace:button}">
					<Button.Resources>
						<!--
							WinUI doesn't let us set `Trigger` styles explicitly. We can
							change them by modifying the theme resources in
							Microsoft.UI.Xaml.Controls. The relevant keys are:
							- Button[Background|Foreground|Borderbrush]
							- Button[Background|Foreground|Borderbrush]PointerOver
							- Button[Background|Foreground|Borderbrush]Pressed
							- Button[Background|Foreground|Borderbrush]Disabled
						-->
						<SolidColorBrush x:Key="ButtonBackgroundDisabled" Color="{StaticResource bar:active_workspace:background}" />
						<SolidColorBrush x:Key="ButtonForegroundDisabled" Color="{StaticResource bar:active_workspace:foreground}" />
						<SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{StaticResource bar:hover:background}" />
						<SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="{StaticResource bar:hover:foreground}" />
					</Button.Resources>
				</Button>
			</DataTemplate>
		</ItemsControl.ItemTemplate>
	</ItemsControl>
</UserControl>
